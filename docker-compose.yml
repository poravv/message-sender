services:
  audio-sender:
    build: .
    container_name: audio-sender-${PORT:-3000}
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - RAILWAY_STATIC_URL=${RAILWAY_STATIC_URL}
      - PUBLIC_URL=${PUBLIC_URL}
      - PORT=${PORT:-3000}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_AUDIENCE=${KEYCLOAK_AUDIENCE}
      - SESSION_STORE=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_TTL_SECONDS=${REDIS_TTL_SECONDS:-43200}
      - REDIS_TLS=${REDIS_TLS:-false}
      - REDIS_TLS_REJECT_UNAUTHORIZED=${REDIS_TLS_REJECT_UNAUTHORIZED:-true}
    volumes:
      - ./uploads:/app/uploads
      - ./bot_sessions:/app/bot_sessions
      - ./temp:/app/temp
    networks:
      - audio-sender-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/"] 
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: bitnami/redis:7.2
    container_name: redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-changeme}
    volumes:
      - redis-data:/bitnami/redis/data
    ports:
      - "6379:6379"  # Expuesto para pruebas locales
    networks:
      - audio-sender-network

  

networks:
  audio-sender-network:
    external: true
    name: audio-sender-shared-network

volumes:
  redis-data:
